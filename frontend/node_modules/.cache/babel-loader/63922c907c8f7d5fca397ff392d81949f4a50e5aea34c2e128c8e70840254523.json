{"ast":null,"code":"import axios from 'axios';\n\n// This is the base URL for your server.\n// It will be your Render URL in production and localhost in development.\n// Notice we do NOT include /api or /api/v1 here.\nexport const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5001';\n\n// Create a new Axios instance with the base URL\nconst apiClient = axios.create({\n  baseURL: baseURL\n});\n\n/**\r\n * This is an Axios interceptor. It's a special function that runs\r\n * BEFORE every single request you make with `apiClient`.\r\n * Its job is to automatically add the authentication token to the headers.\r\n*/\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default apiClient;","map":{"version":3,"names":["axios","baseURL","process","env","REACT_APP_API_URL","apiClient","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject"],"sources":["E:/Database site/Project2/LearnIT/frontend/src/api/apiClient.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// This is the base URL for your server.\r\n// It will be your Render URL in production and localhost in development.\r\n// Notice we do NOT include /api or /api/v1 here.\r\nexport const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5001';\r\n\r\n// Create a new Axios instance with the base URL\r\nconst apiClient = axios.create({\r\n  baseURL: baseURL,\r\n});\r\n\r\n/**\r\n * This is an Axios interceptor. It's a special function that runs\r\n * BEFORE every single request you make with `apiClient`.\r\n * Its job is to automatically add the authentication token to the headers.\r\n*/\r\napiClient.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n}, (error) => {\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default apiClient;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA,OAAO,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;AAE/E;AACA,MAAMC,SAAS,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC7BL,OAAO,EAAEA;AACX,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACAI,SAAS,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC7C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EAAGM,KAAK,IAAK;EACZ,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;AAEF,eAAeX,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}