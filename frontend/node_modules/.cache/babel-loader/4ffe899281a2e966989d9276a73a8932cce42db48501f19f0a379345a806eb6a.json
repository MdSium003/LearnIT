{"ast":null,"code":"var _jsxFileName = \"E:\\\\Database site\\\\Project2\\\\udemy-clone-pern\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport HomePage from './pages/HomePage';\nimport CourseDetailPage from './pages/CourseDetailPage';\nimport LoginPage from './pages/LoginPage';\nimport SignupPage from './pages/SignupPage';\nimport CartPage from './pages/CartPage';\nimport TeachPage from './pages/TeachPage';\n\n// Main App Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [currentPage, setCurrentPage] = useState('home'); // 'home', 'courseDetail', 'login', 'signup', 'cart', 'teach'\n  const [selectedCourse, setSelectedCourse] = useState(null);\n  const [courses, setCourses] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchCourses = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get('http://localhost:5001/api/v1/courses');\n        // Transform backend data to match frontend component props\n        const transformedCourses = response.data.data.courses.map(course => ({\n          id: course.Course_ID,\n          title: course.Title,\n          // NOTE: The following fields are placeholders. You'll need to update your API to provide this data.\n          instructor: course.instructor_name,\n          // Now using real data from the backend!\n          rating: Math.random() * (5 - 4.2) + 4.2,\n          // Placeholder - Random rating between 4.2 and 5.0\n          reviews: Math.floor(Math.random() * 200000),\n          // Placeholder\n          price: course.Price,\n          originalPrice: course.Price > 0 ? course.Price * 1.5 : 99.99,\n          // Placeholder\n          imageUrl: `https://placehold.co/300x170/E2E8F0/4A5568?text=${encodeURIComponent(course.Title.substring(0, 15))}`,\n          bestseller: Math.random() > 0.5,\n          // Placeholder\n          shortDescription: course.Description,\n          // Placeholder reviews. You would fetch these from your backend.\n          reviewsList: [{\n            id: 1,\n            user: 'Student A',\n            rating: 5,\n            comment: 'Absolutely fantastic course! Covered everything I needed and more.'\n          }, {\n            id: 2,\n            user: 'Student B',\n            rating: 4,\n            comment: 'Very comprehensive. A bit fast-paced at times, but the content is top-notch.'\n          }]\n        }));\n        setCourses(transformedCourses);\n      } catch (error) {\n        console.error('Error fetching courses:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCourses();\n  }, []);\n  const navigateToPage = (page, data = null) => {\n    setSelectedCourse(data);\n    setCurrentPage(page);\n    window.scrollTo(0, 0);\n  };\n  let content;\n  switch (currentPage) {\n    case 'home':\n      content = /*#__PURE__*/_jsxDEV(HomePage, {\n        courses: courses,\n        isLoading: isLoading,\n        setCurrentPage: navigateToPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this);\n      break;\n    case 'courseDetail':\n      content = /*#__PURE__*/_jsxDEV(CourseDetailPage, {\n        course: selectedCourse,\n        setCurrentPage: navigateToPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this);\n      break;\n    case 'login':\n      content = /*#__PURE__*/_jsxDEV(LoginPage, {\n        setCurrentPage: navigateToPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this);\n      break;\n    case 'signup':\n      content = /*#__PURE__*/_jsxDEV(SignupPage, {\n        setCurrentPage: navigateToPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this);\n      break;\n    case 'cart':\n      content = /*#__PURE__*/_jsxDEV(CartPage, {\n        courses: courses,\n        setCurrentPage: navigateToPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this);\n      break;\n    case 'teach':\n      content = /*#__PURE__*/_jsxDEV(TeachPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this);\n      break;\n    default:\n      content = /*#__PURE__*/_jsxDEV(HomePage, {\n        courses: courses,\n        isLoading: isLoading,\n        setCurrentPage: navigateToPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this);\n  }\n  const showLayout = currentPage !== 'login' && currentPage !== 'signup';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"font-sans antialiased text-gray-900 bg-gray-50\",\n    children: [showLayout && /*#__PURE__*/_jsxDEV(Navbar, {\n      setCurrentPage: navigateToPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), showLayout && /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KdgKz4TqXTNpJIJCAcvXDYEbQ7s=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Navbar","Footer","HomePage","CourseDetailPage","LoginPage","SignupPage","CartPage","TeachPage","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","selectedCourse","setSelectedCourse","courses","setCourses","isLoading","setIsLoading","fetchCourses","response","get","transformedCourses","data","map","course","id","Course_ID","title","Title","instructor","instructor_name","rating","Math","random","reviews","floor","price","Price","originalPrice","imageUrl","encodeURIComponent","substring","bestseller","shortDescription","Description","reviewsList","user","comment","error","console","navigateToPage","page","window","scrollTo","content","fileName","_jsxFileName","lineNumber","columnNumber","showLayout","className","children","_c","$RefreshReg$"],"sources":["E:/Database site/Project2/udemy-clone-pern/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport HomePage from './pages/HomePage';\nimport CourseDetailPage from './pages/CourseDetailPage';\nimport LoginPage from './pages/LoginPage';\nimport SignupPage from './pages/SignupPage';\nimport CartPage from './pages/CartPage';\nimport TeachPage from './pages/TeachPage';\n\n// Main App Component\nexport default function App() {\n  const [currentPage, setCurrentPage] = useState('home'); // 'home', 'courseDetail', 'login', 'signup', 'cart', 'teach'\n  const [selectedCourse, setSelectedCourse] = useState(null);\n  const [courses, setCourses] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchCourses = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get('http://localhost:5001/api/v1/courses');\n        // Transform backend data to match frontend component props\n        const transformedCourses = response.data.data.courses.map(course => ({\n          id: course.Course_ID,\n          title: course.Title,\n          // NOTE: The following fields are placeholders. You'll need to update your API to provide this data.\n          instructor: course.instructor_name, // Now using real data from the backend!\n          rating: (Math.random() * (5 - 4.2) + 4.2), // Placeholder - Random rating between 4.2 and 5.0\n          reviews: Math.floor(Math.random() * 200000), // Placeholder\n          price: course.Price,\n          originalPrice: course.Price > 0 ? course.Price * 1.5 : 99.99, // Placeholder\n          imageUrl: `https://placehold.co/300x170/E2E8F0/4A5568?text=${encodeURIComponent(course.Title.substring(0, 15))}`,\n          bestseller: Math.random() > 0.5, // Placeholder\n          shortDescription: course.Description,\n          // Placeholder reviews. You would fetch these from your backend.\n          reviewsList: [\n              { id: 1, user: 'Student A', rating: 5, comment: 'Absolutely fantastic course! Covered everything I needed and more.' },\n              { id: 2, user: 'Student B', rating: 4, comment: 'Very comprehensive. A bit fast-paced at times, but the content is top-notch.' },\n          ]\n        }));\n        setCourses(transformedCourses);\n      } catch (error) {\n        console.error('Error fetching courses:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCourses();\n  }, []);\n\n  const navigateToPage = (page, data = null) => {\n    setSelectedCourse(data);\n    setCurrentPage(page);\n    window.scrollTo(0, 0); \n  };\n\n  let content;\n  switch (currentPage) {\n    case 'home':\n      content = <HomePage courses={courses} isLoading={isLoading} setCurrentPage={navigateToPage} />;\n      break;\n    case 'courseDetail':\n      content = <CourseDetailPage course={selectedCourse} setCurrentPage={navigateToPage} />;\n      break;\n    case 'login':\n      content = <LoginPage setCurrentPage={navigateToPage} />;\n      break;\n    case 'signup':\n      content = <SignupPage setCurrentPage={navigateToPage} />;\n      break;\n    case 'cart':\n      content = <CartPage courses={courses} setCurrentPage={navigateToPage} />;\n      break;\n    case 'teach':\n      content = <TeachPage />;\n      break;\n    default:\n      content = <HomePage courses={courses} isLoading={isLoading} setCurrentPage={navigateToPage} />;\n  }\n\n  const showLayout = currentPage !== 'login' && currentPage !== 'signup';\n\n  return (\n    <div className=\"font-sans antialiased text-gray-900 bg-gray-50\">\n      {showLayout && <Navbar setCurrentPage={navigateToPage} />}\n      <main>\n        {content}\n      </main>\n      {showLayout && <Footer />}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,gBAAgB,MAAM,0BAA0B;AACvD,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;EACxD,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMsB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/BD,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,sCAAsC,CAAC;QACxE;QACA,MAAMC,kBAAkB,GAAGF,QAAQ,CAACG,IAAI,CAACA,IAAI,CAACR,OAAO,CAACS,GAAG,CAACC,MAAM,KAAK;UACnEC,EAAE,EAAED,MAAM,CAACE,SAAS;UACpBC,KAAK,EAAEH,MAAM,CAACI,KAAK;UACnB;UACAC,UAAU,EAAEL,MAAM,CAACM,eAAe;UAAE;UACpCC,MAAM,EAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAI;UAAE;UAC3CC,OAAO,EAAEF,IAAI,CAACG,KAAK,CAACH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC;UAAE;UAC7CG,KAAK,EAAEZ,MAAM,CAACa,KAAK;UACnBC,aAAa,EAAEd,MAAM,CAACa,KAAK,GAAG,CAAC,GAAGb,MAAM,CAACa,KAAK,GAAG,GAAG,GAAG,KAAK;UAAE;UAC9DE,QAAQ,EAAE,mDAAmDC,kBAAkB,CAAChB,MAAM,CAACI,KAAK,CAACa,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;UAChHC,UAAU,EAAEV,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;UAAE;UACjCU,gBAAgB,EAAEnB,MAAM,CAACoB,WAAW;UACpC;UACAC,WAAW,EAAE,CACT;YAAEpB,EAAE,EAAE,CAAC;YAAEqB,IAAI,EAAE,WAAW;YAAEf,MAAM,EAAE,CAAC;YAAEgB,OAAO,EAAE;UAAqE,CAAC,EACtH;YAAEtB,EAAE,EAAE,CAAC;YAAEqB,IAAI,EAAE,WAAW;YAAEf,MAAM,EAAE,CAAC;YAAEgB,OAAO,EAAE;UAA+E,CAAC;QAEtI,CAAC,CAAC,CAAC;QACHhC,UAAU,CAACM,kBAAkB,CAAC;MAChC,CAAC,CAAC,OAAO2B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,SAAS;QACR/B,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IACDC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMgC,cAAc,GAAGA,CAACC,IAAI,EAAE7B,IAAI,GAAG,IAAI,KAAK;IAC5CT,iBAAiB,CAACS,IAAI,CAAC;IACvBX,cAAc,CAACwC,IAAI,CAAC;IACpBC,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EACvB,CAAC;EAED,IAAIC,OAAO;EACX,QAAQ5C,WAAW;IACjB,KAAK,MAAM;MACT4C,OAAO,gBAAG/C,OAAA,CAACP,QAAQ;QAACc,OAAO,EAAEA,OAAQ;QAACE,SAAS,EAAEA,SAAU;QAACL,cAAc,EAAEuC;MAAe;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAC9F;IACF,KAAK,cAAc;MACjBJ,OAAO,gBAAG/C,OAAA,CAACN,gBAAgB;QAACuB,MAAM,EAAEZ,cAAe;QAACD,cAAc,EAAEuC;MAAe;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACtF;IACF,KAAK,OAAO;MACVJ,OAAO,gBAAG/C,OAAA,CAACL,SAAS;QAACS,cAAc,EAAEuC;MAAe;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACvD;IACF,KAAK,QAAQ;MACXJ,OAAO,gBAAG/C,OAAA,CAACJ,UAAU;QAACQ,cAAc,EAAEuC;MAAe;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACxD;IACF,KAAK,MAAM;MACTJ,OAAO,gBAAG/C,OAAA,CAACH,QAAQ;QAACU,OAAO,EAAEA,OAAQ;QAACH,cAAc,EAAEuC;MAAe;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACxE;IACF,KAAK,OAAO;MACVJ,OAAO,gBAAG/C,OAAA,CAACF,SAAS;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACvB;IACF;MACEJ,OAAO,gBAAG/C,OAAA,CAACP,QAAQ;QAACc,OAAO,EAAEA,OAAQ;QAACE,SAAS,EAAEA,SAAU;QAACL,cAAc,EAAEuC;MAAe;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;EAClG;EAEA,MAAMC,UAAU,GAAGjD,WAAW,KAAK,OAAO,IAAIA,WAAW,KAAK,QAAQ;EAEtE,oBACEH,OAAA;IAAKqD,SAAS,EAAC,gDAAgD;IAAAC,QAAA,GAC5DF,UAAU,iBAAIpD,OAAA,CAACT,MAAM;MAACa,cAAc,EAAEuC;IAAe;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzDnD,OAAA;MAAAsD,QAAA,EACGP;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EACNC,UAAU,iBAAIpD,OAAA,CAACR,MAAM;MAAAwD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV;AAACjD,EAAA,CAjFuBD,GAAG;AAAAsD,EAAA,GAAHtD,GAAG;AAAA,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}