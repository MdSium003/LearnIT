{"ast":null,"code":"var _jsxFileName = \"E:\\\\Database site\\\\Project2\\\\LearnIT\\\\frontend\\\\src\\\\components\\\\auth\\\\EnrolledRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EnrolledRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    courseId\n  } = useParams();\n  const [isEnrolled, setIsEnrolled] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const checkEnrollment = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5001/api/enrollments/${courseId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setIsEnrolled(response.data.enrolled);\n      } catch (error) {\n        console.error(\"Enrollment check failed:\", error);\n        setIsEnrolled(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    checkEnrollment();\n  }, [courseId]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this); // Or a spinner component\n  }\n  if (!isEnrolled) {\n    // If not enrolled, redirect to the main course detail page or homepage\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: `/course/${courseId}`,\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n  return children;\n};\n_s(EnrolledRoute, \"dzYsLtS0hvlLLA9MeSca6R9P28k=\", false, function () {\n  return [useParams];\n});\n_c = EnrolledRoute;\nexport default EnrolledRoute;\nvar _c;\n$RefreshReg$(_c, \"EnrolledRoute\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Navigate","axios","jsxDEV","_jsxDEV","EnrolledRoute","children","_s","courseId","isEnrolled","setIsEnrolled","isLoading","setIsLoading","checkEnrollment","token","localStorage","getItem","response","get","headers","Authorization","data","enrolled","error","console","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["E:/Database site/Project2/LearnIT/frontend/src/components/auth/EnrolledRoute.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Navigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst EnrolledRoute = ({ children }) => {\r\n    const { courseId } = useParams();\r\n    const [isEnrolled, setIsEnrolled] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const checkEnrollment = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                const response = await axios.get(`http://localhost:5001/api/enrollments/${courseId}`, {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                });\r\n                setIsEnrolled(response.data.enrolled);\r\n            } catch (error) {\r\n                console.error(\"Enrollment check failed:\", error);\r\n                setIsEnrolled(false);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        checkEnrollment();\r\n    }, [courseId]);\r\n\r\n    if (isLoading) {\r\n        return <div>Loading...</div>; // Or a spinner component\r\n    }\r\n\r\n    if (!isEnrolled) {\r\n        // If not enrolled, redirect to the main course detail page or homepage\r\n        return <Navigate to={`/course/${courseId}`} replace />;\r\n    }\r\n\r\n    return children;\r\n};\r\n\r\nexport default EnrolledRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,kBAAkB;AACtD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM;IAAEC;EAAS,CAAC,GAAGR,SAAS,CAAC,CAAC;EAChC,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZ,MAAMc,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,yCAAyCV,QAAQ,EAAE,EAAE;UAClFW,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAChD,CAAC,CAAC;QACFJ,aAAa,CAACO,QAAQ,CAACI,IAAI,CAACC,QAAQ,CAAC;MACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDb,aAAa,CAAC,KAAK,CAAC;MACxB,CAAC,SAAS;QACNE,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IAEDC,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,IAAIG,SAAS,EAAE;IACX,oBAAOP,OAAA;MAAAE,QAAA,EAAK;IAAU;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAClC;EAEA,IAAI,CAACnB,UAAU,EAAE;IACb;IACA,oBAAOL,OAAA,CAACH,QAAQ;MAAC4B,EAAE,EAAE,WAAWrB,QAAQ,EAAG;MAACsB,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1D;EAEA,OAAOtB,QAAQ;AACnB,CAAC;AAACC,EAAA,CAlCIF,aAAa;EAAA,QACML,SAAS;AAAA;AAAA+B,EAAA,GAD5B1B,aAAa;AAoCnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}